<?xml version="1.0" encoding="utf-8" ?>
<!--
  ~ The MIT License (MIT)
  ~ Copyright (c) 2013 longkai(龙凯)
  -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.newgxu.lab.apps.notty.repository.AuthDao">
    <cache />

    <resultMap id="info_user" type="info_user">
        <id property="id" column="id" />
        <result property="type" column="type" />
        <result property="authorizedName" column="authed_name" />
        <result property="org" column="org" />
        <result property="about" column="about" />
        <result property="contact" column="contact" />
        <result property="joinDate" column="join_date" />
        <result property="blocked" column="blocked" />
        <result property="account" column="account" />
        <result property="password" column="password" />
        <result property="lastLoginIP" column="last_login_ip" />
        <result property="lastLoginDate" column="last_login_date" />
        <result property="lastModifiedDate" column="last_modified_date" />
    </resultMap>

    <select id="find" parameterType="_long" resultMap="info_user">
        SELECT * FROM info_users WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="info_user" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO info_users
            (id, type, authed_name, org, about, contact, join_date,
                blocked, account, password, last_login_ip, last_login_date, last_modified_date)
        VALUES
            (null, #{type}, #{authorizedName}, #{org}, #{about}, #{contact}, #{joinDate},
                0, #{account}, #{password}, null, null, null)
    </insert>

    <select id="count" resultType="_long">
        SELECT COUNT(1) FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                info_users
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </select>

    <delete id="delete">
        DELETE FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                info_users
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </delete>

    <update id="update">
        UPDATE info_users SET ${update} WHERE ${where}
    </update>

    <select id="findOne" resultMap="info_user">
        SELECT
        <choose>
            <when test="columns != null">
                ${columns}
            </when>
            <otherwise>
                *
            </otherwise>
        </choose>
        FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                info_users
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </select>

    <select id="query" resultMap="info_user">
        SELECT
        <choose>
            <when test="columns == null or columns == '\\*'">
                *
            </when>
            <otherwise>
                ${columns}
            </otherwise>
        </choose>
        FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                info_users
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
        <if test="groupBy != null">
            GROUP BY ${groupBy}
        </if>
        <if test="having != null">
            HAVING ${having}
        </if>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="limit != null">
            LIMIT ${limit}
        </if>
    </select>
</mapper>